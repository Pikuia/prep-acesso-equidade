# ui_pages.py
import streamlit as st
import pandas as pd
import plotly.express as px
from database import salvar_resposta, buscar_respostas

def mostrar_pesquisa():
    st.header("üìù Pesquisa - Conhecimento sobre PrEP")
    
    with st.form("pesquisa_aprimorada"):
        st.subheader("1. Perfil Sociodemogr√°fico")
        
        idade = st.selectbox("Faixa et√°ria:", [
            "Prefiro n√£o informar", "18-24 anos", "25-29 anos", "30-34 anos", 
            "35-39 anos", "40-49 anos", "50-59 anos", "60+ anos"
        ])
        
        genero = st.selectbox("G√™nero:", [
            "Prefiro n√£o informar", "Homem cis", "Mulher cis", "Homem trans", 
            "Mulher trans", "N√£o-bin√°rio", "Outro"
        ])
        
        orientacao = st.selectbox("Orienta√ß√£o sexual:", [
            "Prefiro n√£o informar", "Heterossexual", "Homossexual", 
            "Bissexual", "Pansexual", "Assexual", "Outra"
        ])
        
        raca = st.selectbox("Ra√ßa/Cor:", [
            "Prefiro n√£o informar", "Branca", "Preta", "Parda", "Amarela", "Ind√≠gena"
        ])
        
        escolaridade = st.selectbox("Escolaridade:", [
            "Prefiro n√£o informar", "Fundamental", "M√©dio", "Superior", "P√≥s-gradua√ß√£o"
        ])
        
        renda = st.selectbox("Renda familiar:", [
            "Prefiro n√£o informar", "At√© 1 sal√°rio", "1-3 sal√°rios", 
            "3-5 sal√°rios", "Acima de 5 sal√°rios"
        ])
        
        regiao = st.selectbox("Estado:", [
            'SP', 'RJ', 'MG', 'RS', 'PR', 'SC', 'BA', 'PE', 'CE', 'PA', 'MA', 'GO',
            'AM', 'ES', 'PB', 'RN', 'MT', 'AL', 'PI', 'DF', 'MS', 'SE', 'RO', 'TO',
            'AC', 'AP', 'RR', 'Moro fora do Brasil', 'Prefiro n√£o informar'
        ])

        st.subheader("2. Conhecimento sobre PrEP")
        conhecimento = st.radio("Voc√™ conhece a PrEP?", [
            "Nunca ouvi falar", "Ouvi falar mas n√£o sei", 
            "Conhe√ßo o b√°sico", "Conhe√ßo bem"
        ])
        
        fonte_info = st.multiselect("Onde ouviu sobre PrEP?", [
            "Profissional de sa√∫de", "Amigos", "Redes sociais", 
            "Sites", "Campanhas", "ONGs", "Outro"
        ])
        
        acesso = st.radio("Sabe onde encontrar PrEP no SUS?", [
            "Sim, sei onde ir", "Tenho uma ideia", "N√£o fa√ßo ideia"
        ])
        
        st.subheader("3. Uso e Percep√ß√µes")
        uso = st.selectbox("Voc√™ usa ou j√° usou PrEP?", [
            "Uso atualmente", "J√° usei", "Nunca usei mas quero",
            "Nunca usei e n√£o quero", "N√£o sei se preciso"
        ])
        
        # Pergunta condicional sobre efeitos colaterais
        efeitos_colaterais_teve = "N√£o se aplica"
        efeitos_colaterais_quais = []
        
        if uso in ["Uso atualmente", "J√° usei"]:
            efeitos_colaterais_teve = st.radio("Teve efeitos colaterais?", 
                ["N√£o", "Sim", "N√£o tenho certeza"])
            if efeitos_colaterais_teve == "Sim":
                efeitos_colaterais_quais = st.multiselect("Quais efeitos?", [
                    "N√°usea", "Dor de cabe√ßa", "Diarreia", "Tontura", 
                    "Cansa√ßo", "Outro"
                ])

        barreiras = st.multiselect("Barreiras para usar PrEP:", [
            "N√£o acho que preciso", "Medo de efeitos", "Dificuldade de acesso",
            "Vergonha", "Esque√ßo de tomar", "Falta de informa√ß√£o", "N√£o se aplica"
        ])
        
        percepcao_risco = st.select_slider(
            "Como avalia seu risco de HIV? (0=nenhum, 10=muito alto)",
            options=list(range(11))
        )

        comentarios = st.text_area("Coment√°rios ou d√∫vidas:")

        if st.form_submit_button("üöÄ Enviar Respostas"):
            resposta = {
                'idade': idade, 'genero': genero, 'orientacao_sexual': orientacao,
                'raca': raca, 'escolaridade': escolaridade, 'renda': renda, 
                'regiao': regiao, 'conhecimento_prep': conhecimento, 
                'uso_prep': uso, 'acesso_servico': acesso,
                'fonte_info': ", ".join(fonte_info), 
                'barreiras': ", ".join(barreiras), 
                'percepcao_risco': percepcao_risco,
                'efeitos_colaterais_teve': efeitos_colaterais_teve,
                'efeitos_colaterais_quais': ", ".join(efeitos_colaterais_quais),
                'comentarios': comentarios
            }
            salvar_resposta(resposta)

def mostrar_analise_pesquisa():
    st.header("ü§ñ An√°lise dos Dados da Pesquisa")
    
    df = buscar_respostas()
    if df.empty:
        st.warning("Ainda n√£o h√° respostas para analisar.")
        return
        
    st.metric("Total de Respostas", len(df))
    
    col1, col2 = st.columns(2)
    with col1:
        fig_idade = px.pie(df, names='idade', title='Faixa Et√°ria')
        st.plotly_chart(fig_idade, use_container_width=True)
        
        fig_raca = px.bar(df['raca'].value_counts(), title='Ra√ßa/Cor')
        st.plotly_chart(fig_raca, use_container_width=True)
        
    with col2:
        fig_genero = px.pie(df, names='genero', title='G√™nero')
        st.plotly_chart(fig_genero, use_container_width=True)
        
        fig_conhecimento = px.pie(df, names='conhecimento_prep', title='Conhecimento PrEP')
        st.plotly_chart(fig_conhecimento, use_container_width=True)

# (Copiar as fun√ß√µes mostrar_duvidas_frequentes e mostrar_onde_encontrar do c√≥digo original aqui)